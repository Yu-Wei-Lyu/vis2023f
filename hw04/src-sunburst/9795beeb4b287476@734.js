function _1(md){return(
md`# HW04 Sunburst`
)}

function _breadcrumb(d3,breadcrumbWidth,breadcrumbHeight,sunburst,breadcrumbPoints,color)
{
  const svg = d3
    .create("svg")
    .attr("viewBox", `0 0 ${breadcrumbWidth * 10} ${breadcrumbHeight}`)
    .style("font", "12px sans-serif")
    .style("margin", "5px");

  const g = svg
    .selectAll("g")
    .data(sunburst.sequence)
    .join("g")
    .attr("transform", (d, i) => `translate(${i * breadcrumbWidth}, 0)`);

    g.append("polygon")
      .attr("points", breadcrumbPoints)
      .attr("fill", d => color(d.data.name))
      .attr("stroke", "white");

    g.append("text")
      .attr("x", (breadcrumbWidth + 10) / 2)
      .attr("y", 15)
      .attr("dy", "0.35em")
      .attr("text-anchor", "middle")
      .attr("fill", "white")
      .text(d => {
        if(d.data.name === "減少包裝材及文宣印製") {
          return "減少包裝";
        }
        else if(d.data.name === "使用無毒媒材、再生材料、廢物利用素材等") {
          return "使用再生材料";
        }
        else if(d.data.name === "工作場所、活動展場的節約能源") {
          return "節約能源";
        }
        else if(d.data.name.length > 6)
        {
          return "其他答案";
        }
        return d.data.name;
      });

  svg
    .append("text")
    .text(sunburst.percentage > 0 ? sunburst.percentage + "%" : "")
    .attr("x", (sunburst.sequence.length + 0.5) * breadcrumbWidth)
    .attr("y", breadcrumbHeight / 2)
    .attr("dy", "0.35em")
    .attr("text-anchor", "middle");

  return svg.node();
}


function _sunburst(partition,data,d3,radius,innerCircleQuestion,outerCircleQuestion,width,color,arc,mousearc,iconNameList)
{ //https://zh.wikipedia.org/zh-tw/%E5%8F%B0%E6%B9%BE%E5%9C%B0%E7%90%86%E5%8C%BA%E5%88%92
  const root = partition(data);
  const svg = d3.create("svg");
  // Make this into a view, so that the currently hovered sequence is available to the breadcrumb
  const element = svg.node();
  element.value = { sequence: [], percentage: 0.0 };

  // 使用foreignObject插入HTML
  const fo = svg
    .append("foreignObject")
    .attr("x", `${radius+50}px`)
    .attr("y", -10)
    .attr("width", radius*2)
    .attr("height", 350);
  
  const div = fo
    .append("xhtml:div")
    .style("color","#555")
    .style("font-size", "25px")
    .style("font-family", "Arial");

  d3.selectAll("div.tooltip").remove(); // clear tooltips from before
  const tooltip = d3
    .select("body")
    .append("div")
    .attr("class", `tooltip`)
    .style("position", "absolute")
    .style("opacity", 0)

  const label = svg
    .append("text")
    .attr("text-anchor", "middle");
    //.style("visibility", "hidden");

  label//內圈問題
    .append("tspan")
    .attr("class", "question1")
    .attr("x", 0)
    .attr("y", 0)
    .attr("dx", `${radius*2+50}px`)
    .attr("dy", "-9em")
    .attr("font-size", "2.5em")
    .attr("fill", "#BBB")
    .text(innerCircleQuestion);

  label//外圈問題
    .append("tspan")
    .attr("class", "question2")
    .attr("x", 25)
    .attr("y", 0)
    .attr("dx", `${radius*2+50}px`)
    .attr("dy", "0em")
    .attr("font-size", "2.5em")
    .attr("fill", "#BBB")
    .text(outerCircleQuestion);

  label//內圈答案
    .append("tspan")
    .attr("class", "sequence")
    .classed("answer1", true)
    .attr("x", 0)
    .attr("y", 0)
    .attr("dx", `${radius*2+50}px`)
    .attr("dy", "-7.5em")
    .attr("font-size", "2.5em")
    .text("");

  label//外圈答案
    .append("tspan")
    .attr("class", "sequence")
    .classed("answer2", true)
    .attr("x", 0)
    .attr("y", 0)
    .attr("dx", `${radius*2+50}px`)
    .attr("dy", "1.5em")
    .attr("font-size", "2.5em")
    .text("");

  label//占比%數
    .append("tspan")
    .attr("class", "percentage")
    .attr("x", 0)
    .attr("y", 0)
    .attr("dx", 0)
    .attr("dy", "0em")
    .attr("font-size", "5em")
    .attr("fill", "#555")
    .text("");

  label//數量
    .append("tspan")
    .attr("class", "dataValue")
    .attr("x", 0)
    .attr("y", 0)
    .attr("dx", 0)
    .attr("dy", "2em")
    .attr("font-size", "2em")
    .attr("fill", "#555")
    .text("");

  svg
    .attr("viewBox", `${-radius} ${-radius} ${width*2.2} ${width}`)
    .style("max-width", `${width*2}px`)
    .style("font", "12px sans-serif");

  const path = svg
    .append("g")
    .selectAll("path")
    .data(
      root.descendants().filter(d => {
        // Don't draw the root node, and for efficiency, filter out nodes that would be too small to see
        return d.depth && d.x1 - d.x0 > 0.001;
      })
    )
    .join("path")
    .attr("fill", d => color(d.data.name))
    .attr("d", arc);

  svg
    .append("g")
    .attr("fill", "none")
    .attr("pointer-events", "all")
    .on("mouseleave", () => {
      path.attr("fill-opacity", 1);
      //tooltip.text("");
      //label.style("visibility", null);
      // Update the value of this view
      element.value = { sequence: [], percentage: 0.0 };
      element.dispatchEvent(new CustomEvent("input"));
    })
    .selectAll("path")
    .data(
      root.descendants().filter(d => {
        // Don't draw the root node, and for efficiency, filter out nodes that would be too small to see
        return d.depth && d.x1 - d.x0 > 0.001;
      })
    )
    .join("path")
    .attr("d", mousearc)
    .on("mouseover", (_evt, d) => {
      tooltip
        .style("opacity", 1)
        .style("width", "120px")
        .html(`${d.data.name}`)
        .style("border-color", color(d.data.name)); 
      iconNameList.forEach(obj => {
        if(obj.name == d.data.name) {
          tooltip.html(`${d.data.name}${obj.icon}`); 
        }
      });
    
    })
    .on("mousemove", (evt, d) => {
      tooltip
        .style("top", evt.pageY - 10 + "px")
        .style("left", evt.pageX + 10 + "px");
    })
    .on("mouseout", () => {
      tooltip.style("opacity", 0);
    })
    .on("mouseenter", (event, d) => {
      // Get the ancestors of the current segment, minus the root
      
      //dataValue
      label
        .style("visibility", null)
        .select(".dataValue")
        .text("計數："+d.value);
      
      // 問題與答案
      if(d.depth-1 === 0)
      {
        label
          .style("visibility", null)
          .select(".question1")
          .attr("fill", "#000");
        label
          .style("visibility", null)
          .select(".question2")
          .attr("fill", "#BBB");
        label
          .style("visibility", null)
          .select(".answer1")
          .attr("fill", sequence => color(d.data.name))
          .text(d.data.name);
        label
          .style("visibility", null)
          .select(".answer2")
          .text("");
      }
      else if(d.depth-1 === 1)
      {
        label
          .style("visibility", null)
          .select(".question1")
          .attr("fill", "#BBB");
        label
          .style("visibility", null)
          .select(".question2")
          .attr("fill", "#000");        
        label
          .style("visibility", null)
          .select(".answer1")
          .attr("fill", "#BBB")
          .text(d.parent.data.name);
        label
          .style("visibility", null)
          .select(".answer2")
          .attr("dy", "1.5em")
          .attr("fill", sequence => color(d.data.name))
          .text(d.data.name);
      }
      
      const sequence = d
        .ancestors()
        .reverse()
        .slice(1);
      // Highlight the ancestors
      path.attr("fill-opacity", node =>
        sequence.indexOf(node) >= 0 ? 1.0 : 0.3
      );

      const percentage = ((100 * d.value) / root.value).toPrecision(3);
      label
        .style("visibility", null)
        .select(".percentage")
        .text(percentage + "%");

      /*tooltip
        .text(d.data.name);*/
      
      // Update the value of this view with the currently hovered sequence and percentage
      element.value = { sequence, percentage };
      element.dispatchEvent(new CustomEvent("input"));
    });     

  return element;
}


function _4(md){return(
md`## 結論
* ### 多數受訪者為工作室的藝術工作者。
* ### 主要趨勢是，藝術工作者普遍透過減少包裝來降低碳排放。
* ### 在美術館中，藝術從業者不僅注重減少包裝，還專注於節約工作場所的能源，而相對於其他地方，使用再生材料和選擇符合永續精神的活動場地這兩項，在他們的優先考慮中並非前三項。`
)}

function _artist(FileAttachment){return(
FileAttachment("artist-1.csv").csv()
)}

function _innerCircleQuestion(artist,selectedQuestion1){return(
Object.keys(artist[0])[selectedQuestion1]
)}

function _outerCircleQuestion(artist,selectedQuestion2){return(
Object.keys(artist[0])[selectedQuestion2]
)}

function _coloredAnswers(GetAnswerArray,innerCircleQuestion,outerCircleQuestion,generateSimilarColors,coloredAnswerNumber)
{
  var innerCircleAnswerSet = GetAnswerArray(innerCircleQuestion);
  var outerCircleAnswerSet = GetAnswerArray(outerCircleQuestion);
  var innerColors = generateSimilarColors(230, coloredAnswerNumber);
  var outerColors = generateSimilarColors(0, coloredAnswerNumber);
  return new Object({
    answerSet: [...innerCircleAnswerSet.slice(0, coloredAnswerNumber), ...outerCircleAnswerSet.slice(0, coloredAnswerNumber)],
    colorSet: [...innerColors, ...outerColors]
  });
}


function _iconNameList(GetMap){return(
[
  {
    name: "北部",
    icon: GetMap("北部")
  },
  {
    name: "中部",
    icon: GetMap("中部")
  },
  {
    name:"南部",
    icon: GetMap("南部")
  },
  {
    name: "東部",
    icon: GetMap("東部")
  },
  {
    name: "工作室",
    icon: `<?xml version="1.0" encoding="utf-8"?> <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"> <title>alt-house</title> <g transform="matrix(0.157583, 0, 0, 0.15625, 10.158739, 19.852116)"> <polyline style="fill:#CFDCE5;" points="234.398,171.532 234.398,112.316 11.146,112.316 11.146,502.795 234.398,502.795 &#10;&#9;&#9;234.398,201.944 &#9;"/> <rect x="234.395" y="244.522" style="fill:#CFDCE5;" width="266.689" height="258.276"/> </g> <rect x="54.452" y="72.186" style="fill:#415E72;" width="27.314" height="26.228"/> <g transform="matrix(0.157583, 0, 0, 0.15625, 10.158739, 19.852116)"> <rect x="76.249" y="337.657" style="fill:#FCD577;" width="93.052" height="113.127"/> <rect x="76.249" y="164.315" style="fill:#FCD577;" width="93.052" height="113.127"/> </g> <path d="M 89.103 89.339 C 89.875 89.339 90.5 88.719 90.5 87.955 L 90.5 58.112 C 90.5 57.347 89.875 56.727 89.103 56.727 L 48.474 56.727 L 48.474 51.459 C 48.474 50.695 47.848 50.075 47.077 50.075 C 46.306 50.075 45.681 50.695 45.681 51.459 L 45.681 97.083 L 13.293 97.083 L 13.293 38.84 L 45.681 38.84 L 45.681 46.707 C 45.681 47.472 46.306 48.092 47.077 48.092 C 47.848 48.092 48.474 47.472 48.474 46.707 L 48.474 37.455 C 48.474 36.69 47.848 36.07 47.077 36.07 L 20.654 36.07 L 20.654 31.555 L 22.996 31.555 C 23.767 31.555 24.392 30.935 24.392 30.17 C 24.392 29.406 23.767 28.786 22.996 28.786 L 20.654 28.786 L 20.654 26.803 L 21.558 26.803 C 22.329 26.803 22.955 26.183 22.955 25.419 C 22.955 24.654 22.329 24.034 21.558 24.034 L 20.654 24.034 L 20.654 21.237 C 20.654 20.472 20.029 19.852 19.258 19.852 C 18.486 19.852 17.861 20.472 17.861 21.237 L 17.861 24.034 L 16.957 24.034 C 16.186 24.034 15.561 24.654 15.561 25.418 C 15.561 26.183 16.186 26.803 16.957 26.803 L 17.861 26.803 L 17.861 28.786 L 15.519 28.786 C 14.748 28.786 14.123 29.406 14.123 30.17 C 14.123 30.935 14.748 31.555 15.519 31.555 L 17.861 31.555 L 17.861 36.07 L 11.896 36.07 C 11.125 36.07 10.5 36.69 10.5 37.455 L 10.5 98.467 C 10.5 99.232 11.125 99.852 11.896 99.852 L 89.103 99.852 C 89.875 99.852 90.5 99.232 90.5 98.467 L 90.5 92.707 C 90.5 91.942 89.875 91.322 89.103 91.322 C 88.332 91.322 87.707 91.942 87.707 92.707 L 87.707 97.083 L 83.143 97.083 L 83.143 72.24 C 83.143 71.475 82.518 70.855 81.747 70.855 L 54.434 70.855 C 53.662 70.855 53.037 71.475 53.037 72.24 L 53.037 97.083 L 48.474 97.083 L 48.474 59.496 L 87.707 59.496 L 87.707 87.955 C 87.707 88.719 88.332 89.339 89.103 89.339 Z M 55.83 86.739 L 80.351 86.739 L 80.351 90.526 L 55.83 90.526 L 55.83 86.739 Z M 80.35 73.625 L 80.35 77.412 L 77.63 77.412 C 76.859 77.412 76.234 78.032 76.234 78.797 C 76.234 79.561 76.859 80.181 77.63 80.181 L 80.35 80.181 L 80.35 83.969 L 55.83 83.969 L 55.83 80.181 L 72.838 80.181 C 73.609 80.181 74.235 79.561 74.235 78.797 C 74.235 78.032 73.609 77.412 72.838 77.412 L 55.83 77.412 L 55.83 73.625 L 80.35 73.625 Z M 55.83 93.295 L 80.351 93.295 L 80.351 97.083 L 55.83 97.083 L 55.83 93.295 Z"/> <path d="M 54.434 64.295 C 53.662 64.295 53.037 64.915 53.037 65.68 C 53.037 66.445 53.662 67.065 54.434 67.065 L 64.803 67.065 C 65.575 67.065 66.2 66.445 66.2 65.68 C 66.2 64.915 65.575 64.295 64.803 64.295 L 54.434 64.295 Z"/> <path d="M 71.377 64.295 C 70.606 64.295 69.981 64.915 69.981 65.68 C 69.981 66.445 70.606 67.065 71.377 67.065 L 81.747 67.065 C 82.518 67.065 83.143 66.445 83.143 65.68 C 83.143 64.915 82.518 64.295 81.747 64.295 L 71.377 64.295 Z"/> <path d="M 36.819 71.281 L 22.155 71.281 C 21.383 71.281 20.758 71.901 20.758 72.665 L 20.758 90.342 C 20.758 91.107 21.383 91.727 22.155 91.727 L 36.819 91.727 C 37.59 91.727 38.215 91.107 38.215 90.342 L 38.215 72.665 C 38.215 71.901 37.59 71.281 36.819 71.281 Z M 23.551 74.05 L 28.09 74.05 L 28.09 88.957 L 23.551 88.957 L 23.551 74.05 Z M 35.422 88.957 L 30.883 88.957 L 30.883 74.05 L 35.422 74.05 L 35.422 88.957 Z"/> <path d="M 38.215 45.58 C 38.215 44.816 37.59 44.196 36.819 44.196 L 22.155 44.196 C 21.383 44.196 20.758 44.816 20.758 45.58 L 20.758 63.257 C 20.758 64.022 21.383 64.642 22.155 64.642 L 36.819 64.642 C 37.59 64.642 38.215 64.022 38.215 63.257 L 38.215 45.58 Z M 35.422 61.872 L 30.883 61.872 L 30.883 53.741 C 30.883 52.976 30.258 52.356 29.487 52.356 C 28.715 52.356 28.09 52.976 28.09 53.741 L 28.09 61.872 L 23.551 61.872 L 23.551 46.965 L 28.09 46.965 L 28.09 49.559 C 28.09 50.323 28.715 50.943 29.487 50.943 C 30.258 50.943 30.883 50.323 30.883 49.559 L 30.883 46.965 L 35.422 46.965 L 35.422 61.872 Z"/> </svg>`
  },
  {
    name: "替代空間",
    icon: `<?xml version="1.0" encoding="utf-8"?> <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"> <title>alt-house</title> <path style="fill:#FFC10D;" d="M 14.629 40.627 C 14.234 41.971 15.367 43.473 16.855 43.447 L 82.993 43.447 C 84.508 43.433 85.602 42.103 85.22 40.627 L 80.925 25.779 C 80.635 24.817 79.739 24.158 78.698 24.158 L 21.15 24.158 C 20.123 24.158 19.214 24.817 18.924 25.779"/> <path style="fill:#194F82;" d="M 89.66 39.428 L 85.365 24.58 C 84.535 21.708 81.794 19.718 78.725 19.718 L 21.15 19.718 C 18.067 19.718 15.327 21.721 14.51 24.58 L 10.202 39.428 C 9.253 42.735 10.795 45.752 14.075 47.32 L 14.075 93.038 C 14.075 96.727 17.158 99.718 20.979 99.718 L 78.87 99.718 C 82.677 99.718 85.786 96.727 85.786 93.051 L 85.786 47.32 C 89.001 46.042 90.595 42.538 89.66 39.428 Z M 53.785 95.278 L 46.077 95.278 L 46.077 82.867 L 49.937 79.152 L 53.798 82.867 L 53.798 95.278 L 53.785 95.278 Z M 81.188 93.052 C 81.188 94.277 80.148 95.278 78.883 95.278 L 58.396 95.278 L 58.396 81.945 C 58.396 81.365 58.159 80.799 57.724 80.364 L 51.571 74.422 C 50.675 73.552 49.213 73.552 48.317 74.422 L 42.151 80.364 C 41.729 80.772 41.479 81.339 41.479 81.945 L 41.479 95.278 L 20.979 95.278 C 19.701 95.278 18.673 94.29 18.673 93.052 L 18.673 47.887 L 81.175 47.887 L 81.175 93.051 L 81.188 93.051 L 81.188 93.052 Z M 83.007 43.447 L 16.855 43.447 C 15.393 43.473 14.26 41.971 14.629 40.627 L 14.892 39.718 L 21.638 39.718 C 22.916 39.718 23.943 38.73 23.943 37.492 C 23.943 36.266 22.916 35.265 21.638 35.265 L 16.197 35.265 L 17.185 31.866 L 29.846 31.866 C 31.124 31.866 32.151 30.878 32.151 29.639 C 32.151 28.414 31.124 27.413 29.846 27.413 L 18.463 27.413 L 18.937 25.779 C 19.227 24.817 20.123 24.158 21.163 24.158 L 78.712 24.158 C 79.739 24.158 80.648 24.817 80.938 25.779 L 85.233 40.628 C 85.615 42.116 84.522 43.447 83.007 43.447 Z"/> <path style="fill:#FFFFFF;" d="M 18.673 93.052 C 18.673 94.277 19.714 95.278 20.979 95.278 L 41.466 95.278 L 41.466 81.945 C 41.466 81.365 41.703 80.799 42.138 80.364 L 48.291 74.422 C 49.186 73.552 50.649 73.552 51.545 74.422 L 57.698 80.364 C 58.119 80.772 58.369 81.339 58.369 81.945 L 58.369 95.278 L 78.856 95.278 C 80.134 95.278 81.162 94.29 81.162 93.052 L 81.162 47.887 L 18.673 47.887 L 18.673 93.052 Z"/> <g transform="matrix(0.2038, 0, 0, 0.203804, 9.925225, 19.717234)"> <polygon style="fill:#56ACE0;" points="215.207,309.855 196.266,291.56 177.389,309.855 177.389,370.752 215.207,370.752 &#9;"/> <rect x="86.367" y="196.012" style="fill:#56ACE0;" width="22.562" height="21.786"/> <rect x="184.952" y="196.012" style="fill:#56ACE0;" width="22.562" height="21.786"/> <rect x="283.603" y="196.012" style="fill:#56ACE0;" width="22.562" height="21.786"/> <rect x="86.367" y="294.404" style="fill:#56ACE0;" width="22.562" height="21.786"/> <rect x="283.603" y="294.404" style="fill:#56ACE0;" width="22.562" height="21.786"/> </g> <g transform="matrix(0.2038, 0, 0, 0.203804, 9.925225, 19.717234)"> <path style="fill:#194F82;" d="M120.306,239.713H75.118c-6.271,0-11.313-4.848-11.313-10.925v-43.572 c0-6.012,5.042-10.925,11.313-10.925h45.188c6.271,0,11.313,4.848,11.313,10.925v43.572 C131.619,234.8,126.577,239.713,120.306,239.713z M86.367,217.798h22.562v-21.786H86.367V217.798z"/> <path style="fill:#194F82;" d="M218.892,239.713h-45.188c-6.271,0-11.313-4.848-11.313-10.925v-43.572 c0-6.012,5.042-10.925,11.313-10.925h45.188c6.271,0,11.313,4.848,11.313,10.925v43.572 C230.205,234.8,225.163,239.713,218.892,239.713z M184.952,217.798h22.562v-21.786h-22.562V217.798L184.952,217.798z"/> <path style="fill:#194F82;" d="M317.478,239.713H272.29c-6.271,0-11.313-4.848-11.313-10.925v-43.572 c0-6.012,5.042-10.925,11.313-10.925h45.188c6.271,0,11.313,4.848,11.313,10.925v43.572 C328.791,234.8,323.748,239.713,317.478,239.713z M283.603,217.798h22.562v-21.786h-22.562V217.798z"/> <path style="fill:#194F82;" d="M120.306,337.976H75.118c-6.271,0-11.313-4.848-11.313-10.925v-43.507 c0-6.012,5.042-10.925,11.313-10.925h45.188c6.271,0,11.313,4.848,11.313,10.925v43.572 C131.619,333.128,126.577,337.976,120.306,337.976z M86.367,316.19h22.562v-21.786H86.367V316.19z"/> <path style="fill:#194F82;" d="M317.478,337.976H272.29c-6.271,0-11.313-4.848-11.313-10.925v-43.507 c0-6.012,5.042-10.925,11.313-10.925h45.188c6.271,0,11.313,4.848,11.313,10.925v43.572 C328.791,333.128,323.748,337.976,317.478,337.976z M283.603,316.19h22.562v-21.786h-22.562V316.19z"/> </g> </svg>`
  },
  {
    name: "美術館",
    icon: `<?xml version="1.0" encoding="utf-8"?> <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"> <title>alt-house</title> <path style="fill:#A4A9AD;" d="M 76.69 40.426 C 63.415 36.459 29.04 48.235 29.04 83.568 L 76.728 83.568 C 76.728 83.568 89.967 44.392 76.69 40.426 Z"/> <path style="opacity:0.1;enable-background:new    ;" d="M 80.975 44.266 L 53.055 44.266 C 51.57 45.003 50.095 45.835 48.65 46.762 L 81.88 46.762 C 81.643 45.856 81.346 45.019 80.975 44.266 Z"/> <path style="opacity:0.2;enable-background:new    ;" d="M 82.104 47.736 C 82.104 47.736 82.104 47.736 82.104 47.736 C 77.112 42.715 63.647 43.917 51.643 50.981 C 49.823 50.08 48.093 49.157 46.437 48.272 C 36.837 55.258 29.04 66.741 29.04 83.568 L 76.728 83.568 C 76.728 83.568 84.623 60.205 82.104 47.736 Z"/> <path style="fill:#A4A9AD;" d="M 82.104 51.327 C 72.315 41.479 29.919 55.562 29.919 90.895 L 77.605 90.895 C 77.605 90.895 91.893 61.173 82.104 51.327 Z"/> <path style="opacity:0.1;enable-background:new    ;" d="M 85.387 59.159 L 45.115 59.159 C 44.167 59.949 43.242 60.781 42.349 61.655 L 85.53 61.655 C 85.522 60.8 85.475 59.967 85.387 59.159 Z"/> <path style="opacity:0.1;enable-background:new    ;" d="M 75.315 57.139 C 67.467 57.139 60.911 55.149 55.219 52.656 C 42.296 58.917 29.919 71.803 29.919 90.895 L 77.605 90.895 C 77.605 90.895 84.855 75.813 85.487 63.578 C 84.227 59.77 81.221 57.139 75.315 57.139 Z"/> <path style="fill:#D1D3D3;" d="M 72.672 59.797 C 45.496 59.797 33.807 35.949 19.955 49.883 C 6.103 63.818 19.863 94.248 19.863 94.248 L 77.463 94.248 C 77.463 94.248 94.043 59.797 72.672 59.797 Z"/> <path style="opacity:0.1;enable-background:new    ;" d="M 49.283 53.779 L 16.987 53.779 C 16.525 54.583 16.12 55.418 15.768 56.275 L 54.883 56.275 C 52.92 55.503 51.059 54.653 49.283 53.779 Z M 82.971 66.647 L 13.787 66.647 C 13.767 67.475 13.771 68.309 13.799 69.141 L 83.464 69.141 C 83.363 68.271 83.203 67.435 82.971 66.647 Z M 15.743 82.008 L 81.962 82.008 C 82.184 81.189 82.395 80.355 82.586 79.512 L 15.157 79.512 C 15.343 80.365 15.539 81.199 15.743 82.008 Z"/> <path style="fill:#A4A9AD;" d="M 88.413 97.325 C 88.413 97.695 88.112 97.997 87.744 97.997 L 11.562 97.997 C 11.194 97.997 10.893 97.695 10.893 97.325 L 10.893 94.92 C 10.893 94.551 11.194 94.248 11.562 94.248 L 87.744 94.248 C 88.112 94.248 88.413 94.551 88.413 94.92 L 88.413 97.325 Z"/> <path style="fill:#333E48;" d="M 46.287 94.248 L 46.287 78.947 C 46.287 77.575 45.17 76.451 43.805 76.451 L 33.386 76.451 C 32.023 76.451 30.906 77.575 30.906 78.947 L 30.906 94.248 L 46.287 94.248 Z"/> <path style="fill:#218649;" d="M 83.615 94.248 L 83.615 83.914 C 83.615 82.181 82.295 80.763 80.682 80.763 L 65.651 80.763 C 64.039 80.763 62.719 82.181 62.719 83.914 L 62.719 94.248 L 83.615 94.248 Z"/> <path style="fill:#00AD68;" d="M 75.307 94.248 L 75.307 86.56 C 75.307 85.271 74.258 84.216 72.976 84.216 L 57.442 84.216 C 56.16 84.216 55.111 85.271 55.111 86.56 L 55.111 94.248 L 75.307 94.248 Z"/> <path style="fill:#1E252B;" d="M 87.744 93 L 84.855 93 L 84.855 83.914 C 84.855 82.669 84.36 81.544 83.57 80.744 C 84.008 78.952 84.33 77.266 84.541 75.682 L 84.568 75.69 C 87.767 64.215 87.501 56.037 83.786 51.352 C 83.419 44.536 81.154 40.458 77.043 39.231 C 72.891 37.989 67.053 38.229 61.024 39.883 C 56.439 41.144 49.682 43.779 43.216 49.211 C 38.923 46.925 35.143 45.01 31.402 44.437 C 26.791 43.731 22.874 45.181 19.077 49.002 C 15.722 52.376 13.632 56.927 12.867 62.523 C 12.267 66.914 12.479 71.959 13.493 77.517 C 14.741 84.346 16.869 90.196 17.992 93 L 11.562 93 C 10.509 93 9.653 93.861 9.653 94.92 L 9.653 97.325 C 9.653 98.384 10.509 99.245 11.562 99.245 L 87.744 99.245 C 88.797 99.245 89.653 98.384 89.653 97.325 L 89.653 94.92 C 89.653 93.861 88.797 93 87.744 93 Z M 84.043 65.899 C 83.631 64.637 83.058 63.527 82.325 62.575 C 80.271 59.904 77.023 58.551 72.672 58.551 C 65.469 58.551 59.44 56.861 54.103 54.621 C 59.146 51.935 64.531 50.195 69.49 49.672 C 74.789 49.112 79.067 50.037 81.227 52.208 C 84.226 55.224 84.672 60.475 84.043 65.899 Z M 72.976 82.968 L 64.186 82.968 C 64.477 82.397 65.024 82.011 65.651 82.011 L 80.682 82.011 C 81.615 82.011 82.375 82.864 82.375 83.914 L 82.375 93 L 76.547 93 L 76.547 86.56 C 76.547 84.579 74.946 82.968 72.976 82.968 Z M 74.066 86.56 L 74.066 93 L 56.351 93 L 56.351 86.56 C 56.351 85.955 56.84 85.464 57.442 85.464 L 72.976 85.464 C 73.578 85.464 74.066 85.955 74.066 86.56 Z M 61.679 42.291 C 67.274 40.755 72.616 40.511 76.336 41.623 C 78.859 42.376 80.443 44.845 81.063 48.973 C 78.219 47.304 74.123 46.672 69.231 47.189 C 63.403 47.805 57.047 49.987 51.259 53.351 C 49.291 52.424 47.413 51.445 45.597 50.48 C 51.475 45.771 57.517 43.434 61.679 42.291 Z M 15.925 77.018 C 14.963 71.728 14.762 66.959 15.328 62.84 C 16.021 57.805 17.872 53.743 20.832 50.765 C 27.773 43.783 33.871 47.042 43.099 51.973 C 50.664 56.015 60.079 61.045 72.672 61.045 C 76.216 61.045 78.803 62.074 80.363 64.101 C 82.647 67.069 82.965 72.4 81.299 79.563 C 81.098 79.531 80.891 79.515 80.682 79.515 L 65.651 79.515 C 63.658 79.515 61.989 80.995 61.576 82.968 L 57.442 82.968 C 55.472 82.968 53.871 84.579 53.871 86.56 L 53.871 93 L 47.527 93 L 47.527 78.947 C 47.527 76.882 45.858 75.203 43.805 75.203 L 33.386 75.203 C 31.335 75.203 29.664 76.882 29.664 78.947 L 29.664 93 L 20.677 93 C 19.799 90.893 17.283 84.48 15.925 77.018 Z M 45.047 78.947 L 45.047 93 L 32.146 93 L 32.146 78.947 C 32.146 78.258 32.703 77.699 33.386 77.699 L 43.805 77.699 C 44.49 77.699 45.047 78.259 45.047 78.947 Z M 87.171 96.749 L 12.135 96.749 L 12.135 95.496 L 87.171 95.496 L 87.171 96.749 Z"/> </svg>`
  },
  {
    name: "校院",
    icon: `<?xml version="1.0" encoding="utf-8"?> <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"> <title>alt-house</title> <path d="M 70.727 38.039 L 70.727 99.447 L 30.727 99.447 L 30.727 38.039 C 30.724 37.096 30.956 36.168 31.398 35.337 C 31.844 34.503 32.487 33.795 33.27 33.269 L 47.556 23.758 C 48.496 23.132 49.598 22.798 50.727 22.798 C 51.858 22.798 52.961 23.132 53.898 23.758 L 68.184 33.269 C 68.97 33.795 69.613 34.503 70.056 35.337 C 70.501 36.168 70.73 37.096 70.727 38.039 Z" fill="#2E7D32"/> <path d="M 82.156 59.46 L 70.727 59.46 L 70.727 99.447 L 82.156 99.447 C 84.43 99.447 86.61 98.544 88.218 96.939 C 89.824 95.331 90.727 93.152 90.727 90.878 L 90.727 68.029 C 90.727 65.758 89.824 63.579 88.218 61.971 C 86.61 60.366 84.43 59.46 82.156 59.46 Z" fill="#FF6F00"/> <path d="M 56.441 65.173 L 45.013 65.173 C 44.256 65.173 43.53 65.475 42.993 66.01 C 42.458 66.547 42.156 67.272 42.156 68.029 L 42.156 99.447 L 47.87 99.447 L 47.87 70.885 L 53.584 70.885 L 53.584 99.447 L 59.298 99.447 L 59.298 68.029 C 59.298 67.272 58.998 66.547 58.464 66.01 C 57.927 65.475 57.201 65.173 56.441 65.173 Z" fill="#263238"/> <path d="M 56.441 45.179 L 45.013 45.179 C 44.256 45.179 43.53 44.879 42.993 44.345 C 42.458 43.808 42.156 43.083 42.156 42.323 C 42.156 41.566 42.458 40.841 42.993 40.304 C 43.53 39.77 44.256 39.467 45.013 39.467 L 56.441 39.467 C 57.201 39.467 57.927 39.77 58.464 40.304 C 58.998 40.841 59.298 41.566 59.298 42.323 C 59.298 43.083 58.998 43.808 58.464 44.345 C 57.927 44.879 57.201 45.179 56.441 45.179 Z" fill="#F5F5F5"/> <path d="M 56.441 56.604 L 45.013 56.604 C 44.256 56.604 43.53 56.304 42.993 55.77 C 42.458 55.233 42.156 54.508 42.156 53.748 C 42.156 52.991 42.458 52.266 42.993 51.729 C 43.53 51.195 44.256 50.892 45.013 50.892 L 56.441 50.892 C 57.201 50.892 57.927 51.195 58.464 51.729 C 58.998 52.266 59.298 52.991 59.298 53.748 C 59.298 54.508 58.998 55.233 58.464 55.77 C 57.927 56.304 57.201 56.604 56.441 56.604 Z" fill="#F5F5F5"/> <path d="M 47.613 23.758 L 33.327 33.269 C 32.533 33.786 31.878 34.494 31.424 35.326 C 30.97 36.16 30.733 37.091 30.727 38.039 L 30.727 99.418 L 50.727 99.418 L 50.727 22.901 C 49.63 22.89 48.55 23.187 47.613 23.758 Z" fill="#388E3C"/> <path d="M 45.013 65.144 C 44.256 65.144 43.53 65.447 42.993 65.981 C 42.458 66.518 42.156 67.243 42.156 68 L 42.156 99.418 L 47.87 99.418 L 47.87 70.857 L 50.727 70.857 L 50.727 65.144 L 45.013 65.144 Z" fill="#37474F"/> <path d="M 45.013 39.438 C 44.256 39.438 43.53 39.741 42.993 40.275 C 42.458 40.812 42.156 41.538 42.156 42.295 C 42.156 43.054 42.458 43.78 42.993 44.317 C 43.53 44.851 44.256 45.151 45.013 45.151 L 50.727 45.151 L 50.727 39.438 L 45.013 39.438 Z" fill="#F5F5F5"/> <path d="M 45.013 50.863 C 44.256 50.863 43.53 51.166 42.993 51.7 C 42.458 52.237 42.156 52.962 42.156 53.719 C 42.156 54.479 42.458 55.205 42.993 55.742 C 43.53 56.276 44.256 56.576 45.013 56.576 L 50.727 56.576 L 50.727 50.863 L 45.013 50.863 Z" fill="#F5F5F5"/> <path d="M 19.298 59.432 C 18.173 59.432 17.058 59.655 16.018 60.086 C 14.978 60.517 14.036 61.148 13.238 61.942 C 12.444 62.739 11.813 63.682 11.381 64.721 C 10.95 65.761 10.727 66.875 10.727 68 L 10.727 90.85 C 10.727 93.123 11.633 95.303 13.238 96.911 C 14.847 98.516 17.027 99.418 19.298 99.418 L 30.727 99.418 L 30.727 59.432 L 19.298 59.432 Z" fill="#F9A825"/> <path d="M 82.156 59.46 L 70.727 59.46 L 70.727 36.611 C 70.727 36.142 70.607 35.68 70.384 35.266 C 70.158 34.851 69.836 34.5 69.441 34.24 L 52.298 22.815 C 51.833 22.51 51.287 22.347 50.727 22.347 C 50.17 22.347 49.624 22.51 49.156 22.815 L 32.013 34.24 C 31.621 34.5 31.298 34.851 31.073 35.266 C 30.85 35.68 30.73 36.142 30.727 36.611 L 30.727 59.46 L 19.298 59.46 C 17.027 59.46 14.847 60.363 13.238 61.971 C 11.633 63.579 10.727 65.758 10.727 68.029 L 10.727 96.591 C 10.727 97.351 11.03 98.076 11.564 98.613 C 12.101 99.147 12.827 99.447 13.584 99.447 L 87.87 99.447 C 88.63 99.447 89.356 99.147 89.893 98.613 C 90.427 98.076 90.727 97.351 90.727 96.591 L 90.727 68.029 C 90.727 65.758 89.824 63.579 88.218 61.971 C 86.61 60.363 84.43 59.46 82.156 59.46 Z M 16.441 68.029 C 16.441 67.272 16.744 66.547 17.278 66.01 C 17.816 65.475 18.541 65.173 19.298 65.173 L 30.727 65.173 L 30.727 93.735 L 16.441 93.735 L 16.441 68.029 Z M 36.441 62.317 L 36.441 38.039 L 50.727 28.613 L 65.013 38.039 L 65.013 93.735 L 36.441 93.735 L 36.441 62.317 Z M 85.013 93.735 L 70.727 93.735 L 70.727 65.173 L 82.156 65.173 C 82.916 65.173 83.641 65.475 84.178 66.01 C 84.713 66.547 85.013 67.272 85.013 68.029 L 85.013 93.735 Z" fill="#263238"/> </svg>`
  },
  {
    name: "國外",
    icon: `<?xml version="1.0" encoding="utf-8"?> <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"> <g id="_4" data-name="4" transform="matrix(1.710044, -1.068554, 0.943804, 1.510401, -506.546066, -124.240185)" style="transform-origin: 557.817px 175.965px;"> <path id="Path_207" data-name="Path 207" d="M581.745,181.466s0-11.137-8.378-11.137c-5.709,0-30.838,3.292-30.838,3.292l-3.748-5.155h-4.892l5.5,13h11.558l-4.766,8h4.42l8.512-8Z" fill="#59bdff"/> <path id="Path_208" data-name="Path 208" d="M563.587,169.2l-11.262-6.737H547.15l7.653,7.569Z" fill="#59bdff"/> </g> </svg>`
  },
  {
    name: "減少包裝材及文宣印製",
    icon: `<?xml version="1.0" encoding="utf-8"?>
<svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
  <path d="M 72.642 71.542 C 75.673 67.736 73.486 62.044 68.705 61.297 C 64.899 60.702 61.463 63.673 61.46 67.562 C 61.457 69.034 61.966 70.461 62.897 71.594 C 60.885 72.453 59.269 74.049 58.375 76.062 C 57.803 75.643 57.182 75.297 56.527 75.031 C 59.563 71.23 57.386 65.536 52.608 64.782 C 52.435 64.754 52.262 64.734 52.088 64.722 C 50.344 64.588 48.625 65.2 47.35 66.409 C 46.076 67.61 45.352 69.291 45.35 71.051 C 45.347 72.523 45.856 73.95 46.788 75.083 C 46.159 75.35 45.564 75.693 45.016 76.104 C 44.106 74.02 42.424 72.379 40.331 71.533 C 43.366 67.729 41.185 62.035 36.406 61.283 C 36.235 61.256 36.064 61.236 35.892 61.223 C 34.148 61.089 32.429 61.702 31.154 62.911 C 29.88 64.115 29.157 65.799 29.159 67.562 C 29.156 69.034 29.665 70.461 30.596 71.594 C 27.389 72.965 25.306 76.141 25.309 79.658 L 25.309 83.305 C 25.309 84.819 26.525 86.047 28.025 86.047 L 41.51 86.047 L 41.51 86.798 C 41.51 88.313 42.726 89.54 44.225 89.54 L 59.238 89.54 C 60.738 89.54 61.953 88.313 61.953 86.798 L 61.953 86.047 L 75.351 86.047 C 76.851 86.047 78.066 84.819 78.066 83.305 L 78.066 79.666 C 78.079 76.092 75.928 72.872 72.642 71.542 Z M 41.492 83.155 L 41.492 83.789 L 28.013 83.789 C 27.749 83.789 27.534 83.572 27.534 83.305 L 27.534 79.666 C 27.531 76.865 29.307 74.377 31.94 73.494 C 33.212 73.071 33.582 71.434 32.617 70.496 C 30.38 68.305 31.331 64.492 34.328 63.631 C 34.688 63.528 35.06 63.475 35.433 63.475 C 35.531 63.475 35.631 63.475 35.73 63.486 C 37.756 63.635 39.358 65.275 39.478 67.322 C 39.478 67.399 39.478 67.483 39.478 67.552 C 39.479 68.652 39.043 69.705 38.267 70.476 C 37.823 70.912 37.641 71.553 37.788 72.16 C 37.933 72.779 38.392 73.274 38.994 73.46 C 41.058 74.106 42.661 75.759 43.256 77.857 C 42.111 79.382 41.493 81.245 41.499 83.16 L 41.492 83.155 Z M 59.717 86.798 C 59.717 87.066 59.502 87.282 59.238 87.282 L 44.214 87.282 C 43.95 87.282 43.735 87.066 43.735 86.798 L 43.735 83.16 C 43.733 80.359 45.508 77.871 48.141 76.987 C 49.413 76.565 49.783 74.927 48.818 73.989 C 46.581 71.799 47.532 67.985 50.529 67.124 C 50.888 67.021 51.26 66.969 51.634 66.968 C 51.733 66.968 51.832 66.968 51.931 66.98 C 55.038 67.207 56.735 70.745 54.987 73.348 C 54.837 73.571 54.665 73.779 54.474 73.968 C 54.032 74.405 53.85 75.046 53.995 75.654 C 54.141 76.272 54.599 76.767 55.201 76.954 C 57.893 77.796 59.725 80.314 59.717 83.16 L 59.717 86.798 Z M 75.828 83.305 C 75.828 83.572 75.614 83.789 75.349 83.789 L 61.953 83.789 L 61.953 83.16 C 61.958 81.208 61.316 79.31 60.128 77.77 C 60.733 75.752 62.272 74.158 64.254 73.494 C 65.525 73.07 65.894 71.433 64.929 70.496 C 62.693 68.305 63.643 64.492 66.64 63.631 C 67 63.528 67.372 63.475 67.746 63.475 C 67.845 63.475 67.945 63.475 68.044 63.486 C 70.068 63.635 71.671 65.274 71.79 67.32 C 71.79 67.397 71.79 67.481 71.79 67.552 C 71.792 68.652 71.355 69.705 70.579 70.476 C 70.135 70.912 69.952 71.553 70.1 72.16 C 70.245 72.779 70.704 73.274 71.306 73.46 C 73.998 74.303 75.829 76.821 75.819 79.666 L 75.828 83.305 Z" style="fill: rgb(255, 255, 255);"/>
  <path d="M 77.241 9.54 L 26.124 9.54 C 22.565 9.544 19.681 12.456 19.677 16.049 L 19.677 47.339 C 19.684 50.93 22.567 53.839 26.124 53.843 L 31.058 53.843 C 31.069 53.843 31.08 53.849 31.085 53.859 L 33.608 57.891 C 34.498 59.312 36.551 59.312 37.441 57.891 L 39.964 53.859 C 39.969 53.85 39.98 53.844 39.991 53.843 L 47.209 53.843 C 47.221 53.844 47.231 53.85 47.237 53.859 L 49.759 57.891 C 50.649 59.312 52.702 59.312 53.593 57.891 L 56.115 53.859 C 56.121 53.85 56.131 53.844 56.142 53.843 L 63.362 53.843 C 63.373 53.844 63.384 53.85 63.389 53.859 L 65.912 57.891 C 66.326 58.557 67.05 58.961 67.829 58.959 C 68.607 58.961 69.332 58.557 69.746 57.891 L 72.266 53.859 C 72.273 53.849 72.283 53.843 72.295 53.843 L 77.356 53.843 C 80.844 53.84 83.672 50.985 83.676 47.463 L 83.676 16.049 C 83.672 12.461 80.795 9.551 77.241 9.54 Z M 81.451 47.463 C 81.448 49.739 79.621 51.582 77.367 51.585 L 72.306 51.585 C 71.527 51.584 70.803 51.988 70.389 52.654 L 67.869 56.687 C 67.855 56.707 67.825 56.707 67.811 56.687 L 65.29 52.654 C 64.877 51.988 64.152 51.584 63.373 51.585 L 56.155 51.585 C 55.375 51.585 54.65 51.992 54.238 52.661 L 51.717 56.693 C 51.703 56.712 51.674 56.712 51.66 56.693 L 49.126 52.661 C 48.713 51.995 47.988 51.591 47.209 51.592 L 39.989 51.592 C 39.21 51.591 38.486 51.995 38.072 52.661 L 35.548 56.693 C 35.534 56.712 35.506 56.712 35.491 56.693 L 32.977 52.661 C 32.562 51.996 31.838 51.592 31.06 51.593 L 26.124 51.593 C 23.798 51.591 21.913 49.687 21.913 47.339 L 21.913 16.049 C 21.916 13.703 23.799 11.801 26.124 11.798 L 77.241 11.798 C 79.565 11.801 81.449 13.703 81.451 16.049 L 81.451 47.463 Z" style="fill: rgb(255, 255, 255);"/>
  <path d="M 76.394 44.068 L 71.49 41.626 L 71.49 30.194 C 71.495 28.774 71.047 27.39 70.212 26.247 L 66.538 21.248 L 66.538 19.451 L 67.217 19.451 C 67.834 19.451 68.335 18.945 68.335 18.322 L 68.335 15.943 C 68.334 14.721 67.352 13.73 66.142 13.73 L 60.231 13.73 C 59.021 13.731 58.04 14.722 58.04 15.945 L 58.04 18.325 C 58.04 18.949 58.54 19.454 59.158 19.454 L 59.73 19.454 L 59.73 21.432 L 56.155 26.226 C 55.292 27.384 54.826 28.794 54.826 30.242 L 54.826 33.342 L 52.409 32.139 L 52.423 16.999 C 52.424 15.82 51.479 14.863 50.312 14.861 L 46.896 14.861 C 45.729 14.861 44.782 15.817 44.783 16.996 L 44.783 22.494 L 39.938 22.494 L 39.938 16.995 C 39.939 15.815 38.994 14.858 37.826 14.854 L 34.409 14.854 C 33.242 14.856 32.297 15.811 32.296 16.99 L 32.296 22.136 L 27.734 19.853 C 26.851 19.413 25.828 20.103 25.892 21.095 C 25.922 21.555 26.193 21.965 26.603 22.169 L 32.286 24.996 L 32.269 44.714 C 32.262 46.492 33.686 47.937 35.446 47.94 L 49.213 47.953 C 50.971 47.952 52.395 46.512 52.393 44.737 L 52.403 35.012 L 54.829 36.21 L 54.829 44.326 C 54.829 46.547 56.613 48.348 58.813 48.348 L 67.503 48.348 C 69.636 48.347 71.392 46.653 71.49 44.502 L 75.269 46.382 C 76.16 46.804 77.169 46.094 77.086 45.105 C 77.048 44.663 76.789 44.271 76.399 44.068 L 76.394 44.068 Z M 47.011 26.057 L 47.019 17.109 L 50.189 17.109 L 50.174 31.018 L 45.484 28.686 C 45.724 28.551 45.945 28.382 46.139 28.186 C 46.7 27.622 47.014 26.856 47.011 26.057 Z M 44.775 24.743 L 44.775 26.049 C 44.775 26.25 44.696 26.443 44.556 26.586 C 44.417 26.727 44.229 26.806 44.032 26.805 L 41.714 26.805 L 39.932 25.918 L 39.932 24.736 L 44.775 24.743 Z M 34.532 17.098 L 37.702 17.098 L 37.702 24.809 L 34.526 23.233 L 34.532 17.098 Z M 50.161 44.731 C 50.162 44.986 50.062 45.231 49.883 45.413 C 49.707 45.592 49.467 45.692 49.217 45.692 L 35.451 45.679 C 34.925 45.677 34.501 45.242 34.508 44.711 L 34.526 26.102 L 38.472 28.065 C 38.98 28.636 39.686 28.987 40.444 29.047 L 50.174 33.886 L 50.161 44.731 Z M 66.105 15.988 L 66.105 17.193 L 60.283 17.193 L 60.283 15.99 L 66.105 15.988 Z M 64.302 19.451 L 64.302 20.843 L 61.973 20.843 L 61.973 19.453 L 64.302 19.453 L 64.302 19.451 Z M 57.062 30.242 C 57.064 29.287 57.372 28.358 57.939 27.594 L 61.294 23.11 L 65.127 23.11 L 68.405 27.597 C 68.957 28.349 69.254 29.26 69.254 30.196 L 69.254 40.518 L 57.065 34.454 L 57.062 30.242 Z M 69.254 44.324 C 69.249 45.297 68.47 46.085 67.506 46.09 L 58.816 46.09 C 57.851 46.09 57.069 45.3 57.069 44.326 L 57.069 37.323 L 69.257 43.387 L 69.254 44.324 Z" style="fill: rgb(255, 255, 255);"/>
</svg>`
  },
  {
    name: "使用無毒媒材、再生材料、廢物利用素材等",
    icon: `<?xml version="1.0" encoding="utf-8"?> <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"> <defs> <clipPath id="clip-0"> <rect x="109.202" y="-47.601" width="52.569" height="58.73" style="fill: rgb(216, 216, 216); stroke: rgb(0, 0, 0);"/> </clipPath> <clipPath id="clip-1"> <path style="fill: rgb(216, 216, 216); stroke: rgb(0, 0, 0);" d="M 33.688 -42.337 L 57.489 -64.216 C 57.489 -64.216 88.14 -63.229 88.483 -62.407 C 88.826 -61.585 93.791 -33.618 94.305 -33.454 C 94.819 -33.29 115.88 5.699 115.88 5.699 L 138.312 15.405 L 140.709 29.388 L 121.36 37.777 L 103.038 47.977 L 34.202 52.418 L 5.605 39.093 C 5.605 39.093 22.9 -41.514 22.9 -41.679 C 22.9 -41.844 33.345 -41.843 33.688 -42.337 Z"/> </clipPath> </defs> <g transform="matrix(0.756802, 0, 0, 0.787758, -22.090663, 66.584642)" style=""> <path d="M 53.627 -45.437 C 53.627 -53.266 59.642 -59.579 67.209 -59.579 C 74.727 -59.579 80.791 -53.266 80.791 -45.437 C 80.743 -37.557 74.679 -31.294 67.209 -31.294 C 59.69 -31.294 53.627 -37.608 53.627 -45.437 Z M 128.545 15.221 L 103.901 15.221 L 103.901 -7.71 C 103.901 -18.882 94.525 -27.912 83.976 -27.912 L 50.942 -27.912 C 39.36 -27.912 29.438 -17.462 29.444 -7.164 L 29.444 34.877 C 29.43 39.536 32.59 41.969 35.736 41.975 C 38.889 41.981 42.028 39.548 42.028 34.877 L 42.028 -6.073 L 46.223 -6.073 L 46.223 41.975 L 87.122 41.975 L 87.122 -6.073 L 91.317 -6.073 L 91.359 21.429 C 91.331 26.195 94.16 28.224 97.084 28.325 L 128.545 28.325 C 137.125 28.325 137.125 15.221 128.545 15.221 Z M 161.579 -17.089 C 161.579 -2.466 150.192 9.392 136.148 9.392 C 122.105 9.392 110.717 -2.466 110.717 -17.089 C 110.717 -31.712 122.105 -43.569 136.148 -43.569 C 150.192 -43.569 161.579 -31.712 161.579 -17.089 Z M 150.07 -33.696 C 150.07 -33.696 146.418 -31.278 140.681 -30.78 C 135.285 -30.282 130.268 -29.5 127.334 -26.442 C 122.791 -21.715 121.666 -15.034 124.261 -10.27 C 127.788 -16.501 139.258 -22.003 139.617 -22.175 C 131.256 -15.988 125.764 -10.09 120.027 -1.56 L 123.201 -1.171 C 123.201 -1.171 125.286 -5.115 127.13 -6.998 C 131.702 -3.659 138.668 -4.655 143.481 -9.667 C 148.772 -15.139 150.07 -33.696 150.07 -33.696 Z" style="clip-path: url('#clip-0'); fill: rgb(0, 255, 0);" transform="matrix(1.0000000000000002, 0, 0, 1, -2.226038624384941, 3.619129565815541)"/> <path d="M 53.625 -45.49 C 53.625 -53.319 59.64 -59.633 67.207 -59.633 C 74.726 -59.633 80.789 -53.319 80.789 -45.49 C 80.741 -37.611 74.677 -31.348 67.207 -31.348 C 59.688 -31.348 53.625 -37.661 53.625 -45.49 Z M 128.543 15.167 L 103.899 15.167 L 103.899 -7.764 C 103.899 -18.936 94.523 -27.966 83.974 -27.966 L 50.94 -27.966 C 39.359 -27.966 29.437 -17.516 29.442 -7.218 L 29.442 34.823 C 29.428 39.482 32.589 41.915 35.734 41.921 C 38.888 41.927 42.026 39.494 42.026 34.823 L 42.026 -6.126 L 46.221 -6.126 L 46.221 41.921 L 87.12 41.921 L 87.12 -6.126 L 91.315 -6.126 L 91.357 21.375 C 91.329 26.141 94.158 28.17 97.083 28.271 L 128.543 28.271 C 137.123 28.271 137.123 15.167 128.543 15.167 Z M 161.577 -17.143 C 161.577 -2.519 150.19 9.338 136.146 9.338 C 122.102 9.338 110.715 -2.519 110.715 -17.143 C 110.715 -31.766 122.102 -43.623 136.146 -43.623 C 150.19 -43.623 161.577 -31.766 161.577 -17.143 Z M 150.067 -33.75 C 150.067 -33.75 146.415 -31.332 140.679 -30.834 C 135.283 -30.336 130.265 -29.554 127.333 -26.496 C 122.789 -21.769 121.664 -15.088 124.259 -10.323 C 127.785 -16.555 139.255 -22.057 139.615 -22.229 C 131.254 -16.042 125.761 -10.144 120.025 -1.614 L 123.199 -1.224 C 123.199 -1.224 125.284 -5.169 127.128 -7.051 C 131.7 -3.713 138.666 -4.709 143.479 -9.72 C 148.77 -15.193 150.067 -33.75 150.067 -33.75 Z" style="clip-path: url('#clip-1'); fill: rgb(255, 255, 255);" transform="matrix(1.0000000000000002, 0, 0, 1, 0.6849433882833864, -0.8225383243455724)"/> </g> </svg>`
  },
  {
    name: "減少商務差旅", 
    icon: `<?xml version="1.0" encoding="utf-8"?> <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"> <path d="M 42.017 26.532 C 42.017 22.883 44.998 19.92 48.669 19.92 C 52.342 19.92 55.322 22.883 55.322 26.532 C 55.322 30.182 52.342 33.145 48.669 33.145 C 44.998 33.145 42.017 30.182 42.017 26.532 Z M 76.2 65.515 L 73.306 65.515 L 73.306 88.013 L 76.2 88.013 C 78.273 88.013 79.324 86.395 79.324 84.922 C 79.324 84.922 79.324 68.707 79.324 68.606 C 79.31 67.147 78.144 65.515 76.2 65.515 Z M 67.474 65.501 L 71.721 65.501 L 71.721 87.998 L 56.646 87.998 L 56.646 95.741 C 56.646 100.922 48.986 100.765 48.986 95.741 L 48.986 65.515 L 47.719 65.515 L 47.719 95.726 C 47.719 100.75 40.117 100.907 40.117 95.726 L 40.117 43.248 L 22.162 25.087 C 19.065 22.01 23.588 17.516 26.682 20.608 L 40.722 34.876 L 55.48 34.861 C 60.101 34.861 63.571 39.126 63.571 43.177 L 63.571 60.665 C 64.81 60.665 65.544 60.665 65.544 60.665 C 66.783 60.665 67.488 61.265 67.488 62.425 L 67.488 65.501 L 67.474 65.501 Z M 58 45.236 L 56.646 45.236 L 56.646 65.501 L 58 65.501 L 58 62.454 L 58 62.425 L 58 45.236 Z M 65.603 62.468 L 59.8 62.468 L 59.8 65.515 L 65.603 65.515 L 65.603 62.468 Z" style="fill: rgb(255, 255, 255);"/> </svg>`
  },
  {
    name: "工作場所、活動展場的節約能源",
    icon:`<?xml version="1.0" encoding="utf-8"?> <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"> <g transform="matrix(0.847642, 0, 0, 1, 10.70751, 8.182423)"> <path d="M94.185,13.322c-0.473-1.006-1.677-1.438-2.683-0.958l-5.093,2.404l-2.717-5.75l5.099-2.41 c1.006-0.474,1.434-1.677,0.958-2.681c-0.479-1.01-1.68-1.438-2.687-0.964l-5.304,2.509c-1.171-1.194-2.995-1.598-4.597-0.845 l-7.49,3.537c-1.448,0.683-2.926,6.774-3.639,10.128c-8.195,2.368-19.417,6.492-22.143,17.128 c-1.647,6.536-1.033,12.164,1.742,15.86c2.33,3.11,5.975,4.784,10.826,4.958c3.121,0.223,6.734-0.995,10.567-2.286 c4.634-1.574,9.425-3.186,12.388-1.663c1.39,0.767,1.92,2.554,2.105,3.542c0.308,1.612,0.137,3.385-0.336,4.9 c-2.412-1.69-5.359-2.539-8.863-2.539c-4.884,0-8.658,1.465-11.338,4.404c-2.687,2.937-4.024,7.016-4.024,12.248 c0,3.36,0.623,6.321,1.862,8.863c1.245,2.547,3.024,4.5,5.335,5.859c2.313,1.358,4.979,2.039,7.994,2.039 c4.818,0,8.579-1.472,11.282-4.428c2.704-2.957,4.053-7.067,4.053-12.337c0-4.497-1.123-8.124-3.241-10.992 c1.283-2.502,1.807-5.77,1.242-8.771c-0.555-2.908-2.033-5.16-4.165-6.348c-4.534-2.337-10.146-0.438-15.581,1.399 c-3.285,1.109-6.673,2.256-9.055,2.088c-3.642-0.141-6.256-1.263-7.828-3.357c-2.026-2.703-2.404-7.128-1.056-12.448 c2.135-8.326,10.943-11.84,20.218-14.498c3.228,1.854,8.706,4.769,10.105,4.112l7.488-3.54c1.561-0.732,2.412-2.344,2.278-3.975 l5.336-2.522C94.226,15.529,94.664,14.323,94.185,13.322z M72.266,86.013c-5.5,0-8.251-3.723-8.251-11.17 c0-3.556,0.65-6.286,1.937-8.192c1.294-1.906,3.382-2.854,6.256-2.854c5.482,0,8.228,3.683,8.228,11.051 C80.428,82.291,77.71,86.013,72.266,86.013z" style="fill: rgb(0, 255, 0);"/> <path d="M14.753,58.195c-4.588,0-8.189,1.509-10.818,4.521C1.314,65.73,0,69.871,0,75.138c0,5.129,1.415,9.16,4.243,12.087 c2.829,2.926,6.749,4.384,11.764,4.384c2.197,0,4.153-0.168,5.859-0.493c1.711-0.332,3.403-0.894,5.075-1.69v-5.568 c-1.885,0.836-3.651,1.435-5.295,1.794c-1.643,0.362-3.417,0.54-5.32,0.54c-2.897,0-5.144-0.838-6.735-2.521 c-1.595-1.684-2.442-4.086-2.541-7.218h21.493V72.75c0-4.528-1.241-8.084-3.705-10.671S19.013,58.195,14.753,58.195z M7.173,71.494c0.251-2.643,1.033-4.658,2.347-6.037c1.314-1.379,3.06-2.067,5.233-2.067c2.18,0,3.889,0.685,5.133,2.054 c1.244,1.369,1.886,3.385,1.923,6.051H7.173z" style="fill: rgb(0, 255, 0);"/> <path d="M47.027,63.91c1.882,0,4.277,0.564,7.173,1.693l2.066-5.513c-2.717-1.259-5.778-1.896-9.183-1.896 c-5.015,0-8.85,1.458-11.499,4.377c-2.655,2.915-3.983,7.084-3.983,12.508c0,5.325,1.265,9.411,3.806,12.262 c2.539,2.847,6.244,4.268,11.122,4.268c1.983,0,3.672-0.158,5.06-0.466c1.386-0.312,2.7-0.825,3.922-1.543v-5.979 c-2.721,1.519-5.61,2.275-8.663,2.275c-2.68,0-4.716-0.91-6.104-2.728s-2.089-4.534-2.089-8.148 C38.655,67.616,41.447,63.91,47.027,63.91z" style="fill: rgb(0, 255, 0);"/> </g> </svg>`
  }
]
)}

function _data(artist,innerCircleQuestion,outerCircleQuestion,buildHierarchy)
{
  // 提取內外圈問題的答案
  var innerCircleAnswer = artist.map(row => row[innerCircleQuestion]);
  var outerCircleAnswer = artist.map(row => row[outerCircleQuestion]);

  // 將內外圈答案結合，形成新的答案陣列
  var combinedAnswers = innerCircleAnswer.map((innerAns, index) => innerAns + '-' + outerCircleAnswer[index]);

  // 重新格式化答案，將其轉換為符合特定模式的陣列
  var reformattedAnswers = combinedAnswers.map(item => {
    const [prefix, values] = item.split('-');
    const splitValues = values.split(';').map(value => value.trim());
    return splitValues.map(value => `${prefix}-${value}`);
  }).reduce((acc, curr) => acc.concat(curr), []);

  // 計算每個重新格式化答案的出現次數
  var answerCounts = {};
  reformattedAnswers.forEach(reformattedAns => {
    answerCounts[reformattedAns] = (answerCounts[reformattedAns] || 0) + 1;
  });

  // 轉換為CSV格式的數據
  var csvData = Object.entries(answerCounts).map(([answer, count]) => [answer, String(count)]);
  
  // 建立包含層次結構的數據
  return buildHierarchy(csvData);
}


function _selectedQuestion1(){return(
1
)}

function _selectedQuestion2(){return(
16
)}

function _coloredAnswerNumber(){return(
5
)}

function _GetAnswerArray(artist){return(
function GetAnswerArray(columnIndex) {
  var singleAnswers = artist.map(row => row[columnIndex])
    .flatMap(value => value.split(";"))
    .reduce((acc, answer) => {
      acc.set(answer, (acc.get(answer) || 0) + 1);
      return acc;
    }, new Map());

  var countAnswer = Array.from(singleAnswers, ([value, count]) => ({ value, count }));
  countAnswer.sort((a, b) => b.count - a.count);

  return countAnswer.map(answer => answer.value);
}
)}

function _GetMap(){return(
function GetMap(area) {
  return `<svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
  <path style="${area == "北部" ? "fill: rgb(255, 255, 0);" : ""}" d="M 78.864 3.211 L 79.117 3.458 L 79.53 3.586 L 80.714 3.841 L 84.37 4.607 L 84.709 4.79 L 84.54 5.128 L 84.498 5.392 L 84.572 5.866 L 84.826 6.661 L 85.1 7.034 L 85.332 7.116 L 86.073 7.025 L 86.453 7.062 L 86.898 7.162 L 87.289 7.336 L 87.5 7.563 L 86.58 7.957 L 85.312 8.503 L 84.73 8.932 L 82.754 11.013 L 82.448 11.45 L 82.205 12.071 L 82.035 12.774 L 81.981 13.467 L 82.014 14.142 L 82.362 15.556 L 82.341 15.921 L 82.183 16.278 L 82.205 17.016 L 82.573 17.592 L 83.261 17.956 L 84.064 18.084 L 84.064 18.248 L 83.726 18.221 L 83.399 18.248 L 83.124 18.321 L 82.922 18.449 L 83.208 18.905 L 83.346 19.498 L 83.261 20.008 L 82.626 20.319 L 82.584 20.548 L 82.658 20.822 L 82.838 21.067 L 82.901 21.323 L 82.637 21.542 L 81.981 21.871 L 81.242 22.6 L 81.21 22.892 L 81.263 23.531 L 81.136 23.768 L 80.999 23.978 L 80.915 24.269 L 80.861 24.854 L 80.798 25 L 80.692 25.119 L 80.64 25.247 L 80.777 25.419 L 80.661 25.419 L 79.487 25.265 L 77.531 24.252 L 77.13 24.333 L 76.876 24.882 L 76.358 25.292 L 75.67 25.292 L 74.793 25 L 73.209 24.654 L 72.521 24.371 L 72.257 24.179 L 71.633 23.75 L 71.115 23.75 L 70.618 23.96 L 70.196 24.015 L 69.804 23.787 L 69.34 23.549 L 68.821 23.458 L 68.674 23.111 L 68.737 22.609 L 68.356 22.518 L 68.061 22.445 L 66.94 22.536 L 66.855 22.592 L 66.792 22.144 L 66.305 21.432 L 65.957 21.132 L 65.819 20.73 L 65.291 20.364 L 63.969 20.656 L 63.462 20.612 L 62.744 20.656 L 61.929 20.849 L 61.496 20.758 L 61.59 20.292 L 61.729 19.873 L 61.622 19.507 L 61.517 19.243 L 61.622 18.96 L 61.707 18.64 L 61.739 18.285 L 61.664 17.81 L 61.252 17.501 L 59.974 16.981 L 59.339 16.569 L 58.926 16.167 L 58.462 15.155 L 58.441 15.174 L 57.953 15.273 L 57.489 15.119 L 57.204 14.772 L 56.749 14.535 L 56.02 14.288 L 56.147 13.914 L 56.729 12.874 L 56.961 12.6 L 57.035 12.464 L 57.035 12.309 L 56.961 12.135 L 56.844 11.934 L 57.004 11.661 L 57.194 11.497 L 57.352 11.287 L 57.415 10.93 L 57.51 10.666 L 57.721 10.402 L 58.007 10.21 L 58.271 10.127 L 58.25 10.018 L 58.324 9.754 L 58.556 9.197 L 58.779 8.896 L 59.72 7.6 L 60.45 6.843 L 61.21 6.287 L 63.155 5.73 L 63.61 5.484 L 64.001 5.192 L 64.477 4.964 L 65.429 4.672 L 67.553 4.343 L 68.737 4.151 L 69.244 3.987 L 69.889 3.513 L 70.09 3.431 L 70.322 3.394 L 70.649 3.394 L 71.02 3.494 L 71.221 3.741 L 71.347 3.987 L 71.506 4.133 L 71.876 4.005 L 71.496 3.485 L 70.882 2.947 L 70.555 2.774 L 70.649 2.527 L 70.84 2.39 L 71.041 2.308 L 71.126 2.218 L 71.347 1.752 L 71.686 1.213 L 72.384 0.674 L 73.398 0.228 L 74.561 0 L 75.703 0.11 L 76.179 0.42 L 77.236 1.715 L 77.616 2.39 L 77.744 2.344 L 78.028 2.281 L 78.346 2.245 L 78.578 2.299 L 78.568 2.381 L 78.451 2.5 L 78.346 2.665 L 78.356 2.865 L 78.472 2.974 L 78.715 3.129 Z M 85.745 11.497 L 85.967 11.541 L 86.137 11.742 L 86.062 11.952 L 85.66 11.943 L 85.513 11.871 L 85.332 11.624 L 85.428 11.651 Z" id="TWN1164" name="Keelung City"/>
  <path style="${area == "南部" ? "fill: rgb(255, 255, 0);" : ""}" d="M 15.798 55.073 L 15.608 55.155 L 15.47 55.018 L 15.312 54.589 L 15.417 54.48 L 15.819 54.362 L 16.104 54.426 L 16.115 54.616 L 16.093 54.762 L 15.967 54.873 Z M 15.67 53.979 L 15.491 54.262 L 15.259 54.207 L 15.047 53.979 L 15.016 53.749 L 15.142 53.65 L 15.481 53.695 Z M 20.83 53.686 L 20.787 53.695 L 20.661 53.559 L 20.692 53.504 L 20.956 53.486 L 21.042 53.668 Z M 22.309 53.266 L 22.341 53.285 L 22.584 53.285 L 22.584 53.404 L 22.469 53.541 L 22.394 53.704 L 22.277 53.449 Z M 18.768 50.565 L 18.589 50.575 L 18.271 50.739 L 18.229 50.702 L 18.271 50.584 L 18.387 50.447 L 18.462 50.392 L 18.631 50.366 L 18.79 50.447 Z M 17.88 49.954 L 17.891 50.164 L 17.943 50.311 L 18.091 50.419 L 18.029 50.565 L 17.901 50.675 L 17.965 50.848 L 17.806 50.904 L 17.478 50.877 L 17.309 50.813 L 17.457 50.529 L 17.437 50.147 L 17.341 50.201 L 17.13 50.255 L 17.066 50.045 L 17.288 49.581 L 17.457 49.553 L 17.743 49.881 Z M 12.648 49.434 L 12.902 49.49 L 12.902 49.635 L 12.838 49.717 L 12.616 49.773 L 12.5 49.672 Z M 18.832 47.172 L 18.493 47.362 L 18.271 47.417 L 18.039 47.518 L 17.901 47.473 L 17.87 47.308 L 17.943 47.254 L 18.134 47.299 L 18.557 47.117 Z M 20.893 44.617 L 20.83 44.735 L 21.252 44.617 L 21.58 44.654 L 21.823 44.636 L 21.992 44.388 L 22.49 45.182 L 22.615 45.547 L 22.563 45.822 L 22.352 45.639 L 22.087 45.483 L 21.792 45.438 L 21.368 45.639 L 21.072 45.666 L 20.925 45.74 L 20.851 45.877 L 20.735 46.251 L 20.661 46.359 L 20.163 46.606 L 19.656 46.67 L 19.148 46.496 L 18.631 46.049 L 18.768 45.822 L 19.054 46.113 L 19.477 46.195 L 19.93 46.086 L 20.301 45.822 L 20.047 45.74 L 19.836 45.629 L 19.677 45.483 L 19.529 45.282 L 19.445 45.411 L 19.338 45.465 L 19.307 45.1 L 19.338 44.735 L 19.529 44.735 L 19.751 44.782 L 20.533 44.362 L 21.02 44.216 Z M 16.675 45.465 L 16.273 45.465 L 16.347 45.273 L 16.474 45.156 L 16.675 45.11 L 16.939 45.091 L 17.172 45.009 L 17.235 44.826 L 17.246 44.388 L 17.584 43.44 L 17.911 43.166 L 18.355 43.495 L 18.091 43.631 L 17.911 43.96 L 17.616 44.735 L 17.605 44.937 L 17.679 45.119 L 17.648 45.238 L 17.33 45.282 L 17.098 45.292 L 16.939 45.319 L 16.802 45.374 Z M 20.248 43.832 L 20.015 43.896 L 19.899 43.758 L 19.804 43.44 L 19.592 43.175 L 19.138 42.783 L 19.719 42.409 L 20.069 42.564 L 20.407 42.819 L 20.554 43.085 L 20.29 43.303 L 20.396 43.623 Z M 20.523 41.059 L 20.491 41.141 L 20.354 40.866 L 20.333 40.739 L 20.523 40.603 L 20.692 40.328 L 20.745 40.428 L 21.01 40.556 L 20.967 40.721 L 20.735 40.839 Z M 34.709 52.035 L 34.519 52.163 L 34.477 52.062 L 34.73 51.779 L 34.826 51.561 L 34.941 51.423 L 35.005 51.469 L 35.016 51.569 L 34.867 51.752 Z M 34.941 50.886 L 34.867 50.821 L 35.079 50.474 L 35.173 50.438 L 35.122 50.611 Z M 35.459 50.064 L 35.449 49.662 L 35.501 49.7 L 35.512 49.963 Z M 35.608 49.178 L 35.523 49.325 L 35.47 49.143 Z M 35.47 48.622 L 35.417 48.74 L 35.28 48.55 Z M 32.32 48.713 L 31.982 48.86 L 32.384 48.367 L 33.853 47.081 L 34.973 45.849 L 35.237 45.776 L 34.286 47.117 L 33.81 47.528 L 33.504 47.847 L 33.101 48.194 L 32.785 48.385 Z M 52.352 44.051 L 52.996 44.114 L 53.716 44.352 L 54.149 44.462 L 54.688 44.717 L 54.656 45.201 L 54.34 45.666 L 54.466 46.104 L 54.751 46.697 L 54.794 47.235 L 54.911 47.582 L 55.713 47.71 L 58.419 47.728 L 58.515 47.747 L 58.969 47.838 L 59.582 48.039 L 60.026 48.577 L 60.1 48.76 L 60.302 49.288 L 59.984 49.745 L 59.392 49.963 L 59.244 50.255 L 59.349 50.62 L 59.942 50.949 L 60.608 51.423 L 60.904 52.117 L 60.936 52.345 L 59.286 52.692 L 58.61 53.066 L 58.187 53.421 L 57.362 53.887 L 57.267 54.407 L 57.51 54.954 L 57.225 55.402 L 56.443 55.767 L 56.358 56.396 L 56.579 57.299 L 56.263 58.504 L 56.252 59.525 L 55.798 60.064 L 54.9 60.721 L 54.656 61.615 L 54.794 62.354 L 55.111 62.774 L 55.767 63.357 L 55.892 63.805 L 55.481 63.851 L 55.851 64.453 L 55.924 64.899 L 56.495 65.019 L 57.076 65.347 L 56.781 66.606 L 56.771 67.081 L 56.559 67.537 L 55.524 67.911 L 55.015 68.156 L 54.212 68.302 L 53.641 68.714 L 53.388 69.315 L 52.996 69.918 L 52.679 70.602 L 52.595 71.944 L 52.722 72.537 L 52.933 73.093 L 53.05 73.741 L 53.05 74.233 L 53.325 74.69 L 53.81 75.201 L 53.546 75.548 L 52.986 75.84 L 52.764 76.196 L 52.711 76.606 L 52.996 76.962 L 53.356 77.117 L 53.684 77.519 L 53.674 78.039 L 53.737 78.595 L 54.074 79.133 L 54.561 79.58 L 55.639 80.009 L 56.115 79.982 L 56.21 84.69 L 56.041 85.356 L 55.777 85.903 L 55.417 86.132 L 54.994 86.469 L 55.005 87.226 L 55.164 88.066 L 55.122 88.604 L 54.646 87.984 L 53.927 87.51 L 53.103 87.189 L 52.256 87.017 L 52.225 87.619 L 51.981 87.828 L 51.623 87.755 L 51.232 87.473 L 51.211 87.253 L 51.348 86.615 L 50.766 85.776 L 50.713 85.557 L 50.724 85.365 L 50.766 85.073 L 50.766 84.088 L 50.818 83.805 L 51.083 83.477 L 51.136 83.202 L 49.032 78.495 L 48.864 78.231 L 48.282 77.609 L 47.817 76.707 L 47.605 76.451 L 46.739 75.858 L 46.168 75.584 L 46.072 75.247 L 45.998 75.128 L 45.534 74.863 L 44.476 74.425 L 44 74.143 L 43.494 73.76 L 43.219 73.613 L 42.944 73.513 L 42.774 73.523 L 42.584 73.585 L 42.351 73.585 L 40.977 72.656 L 39.698 71.095 L 41.041 72.5 L 40.882 71.825 L 40.48 71.167 L 39.921 70.62 L 38.969 69.854 L 38.599 69.471 L 38.43 69.034 L 38.663 68.614 L 38.778 68.24 L 38.62 67.71 L 38.335 67.199 L 37.817 66.497 L 37.33 65.566 L 37.225 65.155 L 37.236 64.881 L 37.394 64.553 L 37.426 64.334 L 37.373 64.224 L 37.088 64.014 L 37.034 63.805 L 36.728 63.357 L 36.654 63.176 L 36.432 61.935 L 36.327 61.36 L 36.136 61.031 L 35.724 60.675 L 36.221 60.365 L 36.506 59.808 L 36.389 59.335 L 35.724 59.252 L 35.598 59.416 L 35.48 59.726 L 35.29 59.973 L 34.941 59.964 L 34.805 59.753 L 34.857 59.115 L 34.773 58.896 L 34.339 58.732 L 34.096 58.923 L 33.906 59.189 L 33.61 59.252 L 33.304 59.023 L 33.229 58.705 L 33.304 58.395 L 33.419 58.185 L 33.736 58.039 L 34.128 57.993 L 34.456 57.902 L 34.56 57.627 L 34.414 57.491 L 33.419 57.271 L 33.419 57.099 L 34.254 57.089 L 34.17 56.852 L 33.715 56.515 L 33.419 56.223 L 33.493 55.859 L 33.758 55.721 L 34.043 55.639 L 34.192 55.411 L 34.106 55.054 L 33.958 54.762 L 34.054 54.489 L 34.202 54.152 L 34.445 53.915 L 34.392 53.704 L 34.445 53.495 L 34.794 52.674 L 34.962 52.518 L 35.237 52.464 L 34.847 52.236 L 35.016 51.861 L 35.417 51.834 L 35.766 51.706 L 35.914 51.752 L 35.819 51.46 L 35.587 51.606 L 35.396 51.561 L 35.132 51.552 L 35.132 51.25 L 35.386 50.739 L 35.776 50.711 L 36.348 50.722 L 35.956 49.763 L 35.523 49.033 L 35.724 48.696 L 35.724 48.522 L 35.396 48.385 L 35.439 48.221 L 35.629 48.039 L 35.724 47.801 L 36.146 47.327 L 35.248 47.372 L 35.226 46.578 L 36.453 46.452 L 37.33 46.88 L 37.975 46.889 L 38.388 46.597 L 38.567 46.149 L 38.789 45.877 L 39.35 45.804 L 40.089 45.282 L 40.554 45.063 L 40.956 44.717 L 42.679 43.86 L 43.441 43.677 L 44.772 43.467 L 45.502 43.431 L 46.062 43.851 L 46.59 44.388 L 47.923 44.808 L 48.314 44.762 L 49.192 44.544 L 49.688 44.854 L 49.941 45.211 L 50.607 45.156 L 51.845 44.937 L 52.267 44.818 L 52.267 44.507 L 52.299 44.051 Z M 33.039 58.886 L 32.976 58.996 L 32.733 58.813 L 32.553 58.431 L 32.585 58.311 L 32.658 58.311 L 32.753 58.422 L 32.827 58.595 L 33.049 58.796 Z M 33.091 56.369 L 32.785 56.989 L 33.198 55.774 L 33.261 55.785 Z M 33.461 55.202 L 33.832 54.297 L 33.885 54.289 L 33.906 54.461 Z M 34.128 53.147 L 34.085 53.367 L 34.149 52.4 L 34.202 52.418 Z M 42.087 76.925 L 42.299 77.19 L 42.267 77.282 L 41.982 77.446 L 41.453 77.838 L 41.359 77.537 L 41.506 77.291 L 41.802 76.962 L 42.014 76.962 Z" id="TWN3414" name="Penghu"/>
  <path style="${area == "中部" ? "fill: rgb(255, 255, 0);" : ""}" d="M 69.255 28.367 L 69.276 28.705 L 68.727 28.923 L 68.029 29.124 L 67.637 29.389 L 67.658 30.292 L 67.965 30.574 L 68.514 30.886 L 68.674 31.295 L 68.642 31.652 L 67.796 32.6 L 67.257 33.577 L 67.013 34.27 L 67.225 34.572 L 67.415 34.982 L 67.352 35.675 L 67.182 36.578 L 66.866 37.381 L 66.453 38.157 L 66.189 38.796 L 66.168 39.133 L 65.565 39.99 L 65.787 40.355 L 66.125 40.731 L 66.253 41.222 L 66.348 41.879 L 66.221 42.646 L 65.882 43.796 L 65.714 44.26 L 65.238 44.544 L 64.434 44.799 L 64.011 45.273 L 63.874 46.049 L 63.314 46.478 L 62.532 46.505 L 61.75 46.651 L 61.199 47.007 L 61.041 47.372 L 60.883 47.619 L 61.062 48.185 L 60.734 48.44 L 60.1 48.76 L 60.026 48.577 L 59.582 48.039 L 58.969 47.838 L 58.515 47.747 L 58.419 47.728 L 55.713 47.71 L 54.911 47.582 L 54.794 47.235 L 54.751 46.697 L 54.466 46.104 L 54.34 45.666 L 54.656 45.201 L 54.688 44.717 L 54.149 44.462 L 53.716 44.352 L 52.996 44.114 L 52.352 44.051 L 52.299 44.051 L 52.267 44.507 L 52.267 44.818 L 51.845 44.937 L 50.607 45.156 L 49.941 45.211 L 49.688 44.854 L 49.192 44.544 L 48.314 44.762 L 47.923 44.808 L 46.59 44.388 L 46.062 43.851 L 45.502 43.431 L 44.772 43.467 L 43.441 43.677 L 42.679 43.86 L 40.956 44.717 L 40.554 45.063 L 40.089 45.282 L 39.35 45.804 L 38.789 45.877 L 38.567 46.149 L 38.388 46.597 L 37.975 46.889 L 37.33 46.88 L 36.453 46.452 L 35.226 46.578 L 35.714 46.104 L 35.692 44.608 L 35.766 43.485 L 36.062 42.591 L 36.517 41.89 L 36.654 40.976 L 36.898 40.173 L 37.034 39.899 L 37.68 39.16 L 37.796 38.905 L 37.87 38.769 L 38.461 38.376 L 38.546 38.23 L 38.63 38.102 L 38.799 37.454 L 38.927 37.181 L 39.677 36.56 L 39.889 36.304 L 40.175 35.594 L 40.618 34.891 L 41.221 33.422 L 41.506 32.993 L 41.823 32.719 L 42.087 32.564 L 42.32 32.463 L 42.489 32.336 L 42.553 32.062 L 42.679 31.806 L 43.219 31.441 L 43.345 31.168 L 43.409 30.246 L 43.504 29.991 L 43.79 29.754 L 44.984 28.549 L 45.049 28.476 L 45.132 28.175 L 45.481 27.929 L 45.713 27.336 L 45.998 26.213 L 46.982 24.745 L 47.278 23.841 L 47.637 23.339 L 49.043 21.99 L 49.805 21.251 L 50.005 20.885 L 50.101 20.283 L 50.333 19.772 L 50.956 18.823 L 51.125 18.248 L 51.285 18.002 L 52.002 17.819 L 52.203 17.627 L 52.32 17.39 L 52.468 17.162 L 52.912 16.77 L 53.398 16.459 L 53.991 16.323 L 54.74 16.442 L 54.646 15.948 L 54.932 15.612 L 55.322 15.265 L 55.524 14.745 L 55.607 14.571 L 55.988 14.407 L 56.02 14.288 L 56.749 14.535 L 57.204 14.772 L 57.489 15.119 L 57.953 15.273 L 58.441 15.174 L 58.462 15.155 L 58.926 16.167 L 59.339 16.569 L 59.974 16.981 L 61.252 17.501 L 61.664 17.81 L 61.739 18.285 L 61.707 18.64 L 61.622 18.96 L 61.517 19.243 L 61.622 19.507 L 61.729 19.873 L 61.59 20.292 L 61.496 20.758 L 61.929 20.849 L 62.744 20.656 L 63.462 20.612 L 63.969 20.656 L 65.291 20.364 L 65.819 20.73 L 65.957 21.132 L 66.305 21.432 L 66.792 22.144 L 66.855 22.592 L 66.94 22.536 L 68.061 22.445 L 68.356 22.518 L 68.737 22.609 L 68.674 23.111 L 68.821 23.458 L 69.34 23.549 L 69.804 23.787 L 70.196 24.015 L 70.618 23.96 L 71.115 23.75 L 71.633 23.75 L 72.257 24.179 L 71.759 24.626 L 71.718 25.009 L 71.464 25.574 L 70.671 26.004 L 70.354 26.461 L 70.217 26.924 L 69.889 27.272 L 69.53 27.427 L 69.402 27.619 L 69.107 27.801 Z" id="TWN1173" name="Nantou"/>
  <path style="${area == "東部" ? "fill: rgb(255, 255, 0);" : ""}" d="M 75.894 85.776 L 75.312 85.931 L 74.539 85.666 L 73.822 85.228 L 73.409 84.891 L 73.536 84.644 L 73.526 84.416 L 73.42 84.197 L 73.24 84.005 L 75.301 84.005 L 75.301 84.171 L 75.164 84.489 L 75.121 84.754 L 75.217 84.982 L 75.713 85.301 L 75.925 85.529 Z M 73.356 69.572 L 73.346 69.671 L 72.986 69.636 L 72.944 69.581 L 72.658 69.49 L 72.362 69.043 L 72.215 68.65 L 72.278 68.596 L 73.335 68.531 L 73.451 68.585 L 73.536 68.769 L 73.451 69.124 L 73.356 69.271 L 73.314 69.426 Z M 56.115 79.982 L 55.639 80.009 L 54.561 79.58 L 54.074 79.133 L 53.737 78.595 L 53.674 78.039 L 53.684 77.519 L 53.356 77.117 L 52.996 76.962 L 52.711 76.606 L 52.764 76.196 L 52.986 75.84 L 53.546 75.548 L 53.81 75.201 L 53.325 74.69 L 53.05 74.233 L 53.05 73.741 L 52.933 73.093 L 52.722 72.537 L 52.595 71.944 L 52.679 70.602 L 52.996 69.918 L 53.388 69.315 L 53.641 68.714 L 54.212 68.302 L 55.015 68.156 L 55.524 67.911 L 56.559 67.537 L 56.771 67.081 L 56.781 66.606 L 57.076 65.347 L 56.495 65.019 L 55.924 64.899 L 55.851 64.453 L 55.481 63.851 L 55.892 63.805 L 55.767 63.357 L 55.111 62.774 L 54.794 62.354 L 54.656 61.615 L 54.9 60.721 L 55.798 60.064 L 56.252 59.525 L 56.263 58.504 L 56.579 57.299 L 56.358 56.396 L 56.443 55.767 L 57.225 55.402 L 57.51 54.954 L 57.267 54.407 L 57.362 53.887 L 58.187 53.421 L 58.61 53.066 L 59.286 52.692 L 60.936 52.345 L 60.904 52.117 L 60.608 51.423 L 59.942 50.949 L 59.349 50.62 L 59.244 50.255 L 59.392 49.963 L 59.984 49.745 L 60.302 49.288 L 60.1 48.76 L 60.734 48.44 L 61.062 48.185 L 60.883 47.619 L 61.041 47.372 L 61.199 47.007 L 61.75 46.651 L 62.532 46.505 L 63.314 46.478 L 63.874 46.049 L 64.011 45.273 L 64.434 44.799 L 65.238 44.544 L 65.714 44.26 L 65.882 43.796 L 66.221 42.646 L 66.348 41.879 L 66.253 41.222 L 66.125 40.731 L 65.787 40.355 L 65.565 39.99 L 66.168 39.133 L 66.189 38.796 L 66.453 38.157 L 66.866 37.381 L 67.182 36.578 L 67.352 35.675 L 67.415 34.982 L 67.225 34.572 L 67.013 34.27 L 67.257 33.577 L 67.796 32.6 L 68.642 31.652 L 68.674 31.295 L 68.514 30.886 L 67.965 30.574 L 67.658 30.292 L 67.637 29.389 L 68.029 29.124 L 68.727 28.923 L 69.276 28.705 L 69.255 28.367 L 69.107 27.801 L 69.402 27.619 L 69.53 27.427 L 69.889 27.272 L 70.217 26.924 L 70.354 26.461 L 70.671 26.004 L 71.464 25.574 L 71.718 25.009 L 71.759 24.626 L 72.257 24.179 L 72.521 24.371 L 73.209 24.654 L 74.793 25 L 75.67 25.292 L 76.358 25.292 L 76.876 24.882 L 77.13 24.333 L 77.531 24.252 L 79.487 25.265 L 80.661 25.419 L 80.777 25.419 L 80.84 25.492 L 81.01 25.758 L 81.031 25.858 L 80.883 26.076 L 80.269 26.597 L 79.614 27.381 L 79.117 27.72 L 78.969 27.901 L 79.043 28.093 L 78.948 28.23 L 78.25 28.695 L 77.986 28.914 L 77.691 29.461 L 77.384 30.574 L 76.6 31.57 L 76.443 31.971 L 76.465 32.4 L 76.654 32.874 L 76.813 33.084 L 76.95 33.175 L 77.035 33.303 L 77.045 33.595 L 76.929 33.924 L 76.538 34.452 L 76.465 34.771 L 76.421 35.356 L 76.084 36.844 L 75.407 38.394 L 74.561 42.053 L 74.054 42.946 L 72.891 48.795 L 72.405 51.204 L 72.173 51.651 L 71.422 52.509 L 71.147 52.957 L 70.925 53.513 L 70.767 54.553 L 70.788 55.484 L 70.681 56.369 L 70.164 57.271 L 69.942 57.464 L 69.445 57.783 L 69.213 57.984 L 69.107 58.194 L 68.927 58.723 L 68.42 59.489 L 68.113 60.684 L 67.891 61.224 L 66.803 62.573 L 66.664 62.819 L 65.195 63.897 L 64.847 64.243 L 64.805 64.49 L 64.867 65.055 L 64.847 65.31 L 64.72 65.602 L 64.487 65.922 L 63.99 66.478 L 63.493 66.889 L 61.792 67.865 L 60.65 68.951 L 60.364 69.078 L 60.142 69.325 L 59.593 70.557 L 59.318 71.013 L 58.473 71.926 L 58.124 72.473 L 57.923 73.595 L 57.415 75.128 L 56.411 76.652 L 56.263 77.172 L 56.084 78.641 Z" id="TWN1177" name="Taitung"/>
</svg>`
}
)}

function _generateSimilarColors(hslToRgb,rgbToHex){return(
function generateSimilarColors(colorHue, numColors) {
    const colors = [];
    const baseHue = colorHue;  // 基準色的色相
    const hueRange = 0;  // 色相範圍，控制色差

    for (let i = 1; i <= numColors; i++) {
        const minSaturation = 50;  // 最小飽和度
        const saturationRange = 50;  // 飽和度範圍，避免過於灰色
        const minLightness = 20;  // 最小亮度，避免黑色
        const lightnessRange = 70;  // 亮度範圍，避免過於淺色

        const hue = (baseHue + (i / numColors) * hueRange) % 360;  // 色相，從基準到基準+範圍
        const saturation = minSaturation + (i / numColors) * saturationRange;  // 飽和度，從較低到較高
        const lightness = minLightness + (i / numColors) * lightnessRange;  // 亮度，從較深到較淺
        const rgb = hslToRgb(hue / 360, saturation / 100, lightness / 100);
        const hexColor = rgbToHex(rgb[0] * 255, rgb[1] * 255, rgb[2] * 255);
        colors.push(hexColor);
    }

    return colors;
}
)}

function _hslToRgb(){return(
function hslToRgb(h, s, l) {
    let r, g, b;

    if (s === 0) {
        r = g = b = l; // achromatic
    } else {
        const hue2rgb = (p, q, t) => {
            if (t < 0) t += 1;
            if (t > 1) t -= 1;
            if (t < 1 / 6) return p + (q - p) * 6 * t;
            if (t < 1 / 2) return q;
            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
            return p;
        };

        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        const p = 2 * l - q;
        r = hue2rgb(p, q, h + 1 / 3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1 / 3);
    }

    return [r, g, b];
}
)}

function _rgbToHex(){return(
function rgbToHex(r, g, b) {
    const toHex = (value) => {
        const hex = Math.round(value).toString(16);
        return hex.length === 1 ? "0" + hex : hex;
    };

    return `#${toHex(r)}${toHex(g)}${toHex(b)}`;
}
)}

function _color(d3,coloredAnswers){return(
d3
  .scaleOrdinal()
  .domain(coloredAnswers.answerSet)
  .range(coloredAnswers.colorSet)
  .unknown("#BEBEBE")
)}

function _buildHierarchy(){return(
function buildHierarchy(csv) {
  // Helper function that transforms the given CSV into a hierarchical format.
  const root = { name: "root", children: [] };
  for (let i = 0; i < csv.length; i++) {
    const sequence = csv[i][0];
    const size = +csv[i][1];
    if (isNaN(size)) {
      // e.g. if this is a header row
      continue;
    }
    const parts = sequence.split("-");
    let currentNode = root;
    for (let j = 0; j < parts.length; j++) {
      const children = currentNode["children"];
      const nodeName = parts[j];
      let childNode = null;
      if (j + 1 < parts.length) {
        // Not yet at the end of the sequence; move down the tree.
        let foundChild = false;
        for (let k = 0; k < children.length; k++) {
          if (children[k]["name"] == nodeName) {
            childNode = children[k];
            foundChild = true;
            break;
          }
        }
        // If we don't already have a child node for this branch, create it.
        if (!foundChild) {
          childNode = { name: nodeName, children: [] };
          children.push(childNode);
        }
        currentNode = childNode;
      } else {
        // Reached the end of the sequence; create a leaf node.
        childNode = { name: nodeName, value: size };
        children.push(childNode);
      }
    }
  }
  return root;
}
)}

function _width(){return(
640
)}

function _radius(){return(
320
)}

function _partition(d3,radius){return(
data =>
  d3.partition().size([2 * Math.PI, radius * radius])(
    d3
      .hierarchy(data)
      .sum(d => d.value)
      .sort((a, b) => b.value - a.value)
  )
)}

function _mousearc(d3,radius){return(
d3
  .arc()
  .startAngle(d => d.x0)
  .endAngle(d => d.x1)
  .innerRadius(d => Math.sqrt(d.y0))
  .outerRadius(radius)
)}

function _arc(d3,radius){return(
d3
  .arc()
  .startAngle(d => d.x0)
  .endAngle(d => d.x1)
  .padAngle(1 / radius)
  .padRadius(radius)
  .innerRadius(d => Math.sqrt(d.y0))
  .outerRadius(d => Math.sqrt(d.y1) - 1)
)}

function _breadcrumbWidth(){return(
75
)}

function _breadcrumbHeight(){return(
30
)}

function _breadcrumbPoints(breadcrumbWidth,breadcrumbHeight){return(
function breadcrumbPoints(d, i) {
  const tipWidth = 10;
  const points = [];
  points.push("0,0");
  points.push(`${breadcrumbWidth},0`);
  points.push(`${breadcrumbWidth + tipWidth},${breadcrumbHeight / 2}`);
  points.push(`${breadcrumbWidth},${breadcrumbHeight}`);
  points.push(`0,${breadcrumbHeight}`);
  if (i > 0) {
    // Leftmost breadcrumb; don't include 6th vertex.
    points.push(`${tipWidth},${breadcrumbHeight / 2}`);
  }
  return points.join(" ");
}
)}

function _29(htl){return(
htl.html`<style>
.tooltip {
  padding: 8px 12px;
  color: white;
  border-radius: 6px;
  border: 2px solid rgba(255,255,255,0.5);
  box-shadow: 0 1px 4px 0 rgba(0,0,0,0.2);
  pointer-events: none;
  transform: translate(-50%, -100%);
  font-family: "Helvetica", sans-serif;
  background: rgba(20,10,30,0.6);
  transition: 0.2s opacity ease-out, 0.1s border-color ease-out;
}
</style>`
)}

export default function define(runtime, observer) {
  const main = runtime.module();
  function toString() { return this.url; }
  const fileAttachments = new Map([
    ["artist-1.csv", {url: new URL("./artist.csv", import.meta.url), mimeType: "text/csv", toString}]
  ]);
  main.builtin("FileAttachment", runtime.fileAttachments(name => fileAttachments.get(name)));
  main.variable(observer()).define(["md"], _1);
  main.variable(observer("breadcrumb")).define("breadcrumb", ["d3","breadcrumbWidth","breadcrumbHeight","sunburst","breadcrumbPoints","color"], _breadcrumb);
  main.variable(observer("viewof sunburst")).define("viewof sunburst", ["partition","data","d3","radius","innerCircleQuestion","outerCircleQuestion","width","color","arc","mousearc","iconNameList"], _sunburst);
  main.variable(observer("sunburst")).define("sunburst", ["Generators", "viewof sunburst"], (G, _) => G.input(_));
  main.variable(observer()).define(["md"], _4);
  main.variable(observer("artist")).define("artist", ["FileAttachment"], _artist);
  main.variable(observer("innerCircleQuestion")).define("innerCircleQuestion", ["artist","selectedQuestion1"], _innerCircleQuestion);
  main.variable(observer("outerCircleQuestion")).define("outerCircleQuestion", ["artist","selectedQuestion2"], _outerCircleQuestion);
  main.variable(observer("coloredAnswers")).define("coloredAnswers", ["GetAnswerArray","innerCircleQuestion","outerCircleQuestion","generateSimilarColors","coloredAnswerNumber"], _coloredAnswers);
  main.variable(observer("iconNameList")).define("iconNameList", ["GetMap"], _iconNameList);
  main.variable(observer("data")).define("data", ["artist","innerCircleQuestion","outerCircleQuestion","buildHierarchy"], _data);
  main.variable(observer("selectedQuestion1")).define("selectedQuestion1", _selectedQuestion1);
  main.variable(observer("selectedQuestion2")).define("selectedQuestion2", _selectedQuestion2);
  main.variable(observer("coloredAnswerNumber")).define("coloredAnswerNumber", _coloredAnswerNumber);
  main.variable(observer("GetAnswerArray")).define("GetAnswerArray", ["artist"], _GetAnswerArray);
  main.variable(observer("GetMap")).define("GetMap", _GetMap);
  main.variable(observer("generateSimilarColors")).define("generateSimilarColors", ["hslToRgb","rgbToHex"], _generateSimilarColors);
  main.variable(observer("hslToRgb")).define("hslToRgb", _hslToRgb);
  main.variable(observer("rgbToHex")).define("rgbToHex", _rgbToHex);
  main.variable(observer("color")).define("color", ["d3","coloredAnswers"], _color);
  main.variable(observer("buildHierarchy")).define("buildHierarchy", _buildHierarchy);
  main.variable(observer("width")).define("width", _width);
  main.variable(observer("radius")).define("radius", _radius);
  main.variable(observer("partition")).define("partition", ["d3","radius"], _partition);
  main.variable(observer("mousearc")).define("mousearc", ["d3","radius"], _mousearc);
  main.variable(observer("arc")).define("arc", ["d3","radius"], _arc);
  main.variable(observer("breadcrumbWidth")).define("breadcrumbWidth", _breadcrumbWidth);
  main.variable(observer("breadcrumbHeight")).define("breadcrumbHeight", _breadcrumbHeight);
  main.variable(observer("breadcrumbPoints")).define("breadcrumbPoints", ["breadcrumbWidth","breadcrumbHeight"], _breadcrumbPoints);
  main.variable(observer()).define(["htl"], _29);
  return main;
}
